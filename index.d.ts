// Generated by dts-bundle v0.7.3

export { AbstractHastePackage, HasteRowItem, GoDispatcher, Haste, SearchObject, getPath };
let getPath: (staticPath: any) => any;

export default class AbstractHastePackage {
    protected packageData: object;
    protected packageName: string;
    protected packagePath: string;
    protected haste: any;
    protected icon: string;
    protected pkgConfig: any;
    protected win: any;
    constructor(win: any, config: any, pkgPath: any);
    getPackageName(): string;
    getDefaultItem(value: any, description?: string, path?: string, icon?: string): HasteRowItem;
    insert(value: any, description?: string, path?: string, icon?: string): void;
    insertItem(item: HasteRowItem): void;
    search(searchObj: SearchObject, callback: Function): void;
    activate(rowItem: HasteRowItem, callback: Function): void;
    activateUponEntry(): void;
    getIcon(icon: any): string;
    loadConfig(): void;
    destroy(): void;
}

export default class HasteRowItem {
    db: string;
    d: string;
    i: string;
    t: string;
    p: string;
    title: string;
    c: number;
    score?: number;
    u?: number;
    constructor(title?: string);
    setTitle(value: string): void;
    getTitle(): string;
    setPath(value: string): void;
    getPath(): string;
    setDB(value: string): void;
    getDB(): string;
    setDescription(value: string): void;
    getDescription(): string;
    setIcon(value: string): void;
    getIcon(): string;
    setPackage(value: string): void;
    getPackage(): string;
    setCount(value: number): void;
    getCount(): number;
    countUp(): void;
    setUnixtime(value: number | undefined): void;
    getUnixtime(): number | undefined;
    setScore(value: number | undefined): void;
    getScore(): number | undefined;
    static create(data: any): HasteRowItem;
    toPayload(): {
        db: string;
        t: string;
        title: string;
        p: string;
        d: string;
        i: string;
        c: number;
    };
}

export default class SearchObject {
    value: string;
    pkgList: Array<string>;
    constructor();
}

export default class GoDispatcher {
    static listening: boolean;
    static startListen(): void;
    static send(packet: any): Promise<{}>;
    static close(): void;
}

export default class Haste {
    constructor(packageName: string, db?: string);
    pasteText(): this;
    addCollection(): this;
    updateCalled(item: any): this;
    multipleInsert(itemList: any): this;
    insert(item: HasteRowItem, persist?: boolean): this;
    getKey(value: string): this;
    getExecList(): this;
    fuzzySearch(value: string): this;
    getRows(limit: number): this;
    orderBy(field: string): this;
    asc(): this;
    desc(): this;
    go(): Promise<{}>;
    mouse(): {
        up(): void;
        down(): void;
        left(): void;
        right(): void;
    };
}

